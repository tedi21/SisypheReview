/** 
 * SqliteDataStatement.hpp
 *
 *
 * @date: 19-07-2012
 * @author: Teddy DIDÉ
 * @version: 2.00
 * @brief: Project generated by gensources
 */

#ifndef _SQLITE_DATA_STATEMENT_HPP_
#define _SQLITE_DATA_STATEMENT_HPP_

#include "config.hpp"
#include "encoding.hpp"
#include <boost/container/vector.hpp>

#include <sqlite3.h>

NAMESPACE_BEGIN(data_access)

using namespace log4cpp;
using namespace enc;
namespace bc = boost::container;

template <class EncodingT>
class _DataConnection;

// Class representing sqlite statement
template <class EncodingT>
class _DataStatement
{ 
private:
	// Private members
    Category* m_logger;
	sqlite3_stmt* m_statement;

	friend class _DataConnection<EncodingT>;
    // Private constructor
    _DataStatement(sqlite3_stmt* statement);
	
	// Private copy
	_DataStatement(const _DataStatement& copy);
	
	// Private operator copy
	_DataStatement& 
	operator=(const _DataStatement& copy);
	
	// Release statement
    void 
	release();

public:
	// Constructor
	_DataStatement();

	// Destructor
	~_DataStatement();
	
	// Swap
	void 
    swap(_DataStatement& statement);
	
	// Execute Query
	bool 
	executeStep();

	bool 
	executeQuery();
	
	// Set Values
	bool 
  setBlob		(int index, const bc::vector<unsigned char>& value);
	
	bool 
	setDouble	(int index, double value);
	
	bool 
	setInt		(int index, int value);
  
	bool 
	setInt64  (int index, long long value);
	
	bool 
	setText		(int index, const typename ucs::string_t& value);
	
	bool 
	setText		(int index, const typename ansi::string_t& value);
	
	// Get Value
	bool 
  getBlob		(int column, bc::vector<unsigned char>& value) const;
	
	bool 
	getDouble	(int column, double& value) const;
	
	bool 
	getInt		(int column, int& value) const;
  
	bool 
	getInt64  (int column, long long& value) const;
	
	bool 
  getText		(int column, typename ucs::string_t& value) const;
	
	bool 
  getText		(int column, typename ansi::string_t& value) const;

};

typedef _DataStatement<ucs>        UniDataStatement;
typedef _DataStatement<ansi>       DataStatement;

NAMESPACE_END

#include "DataStatement_impl.hpp"
#endif
