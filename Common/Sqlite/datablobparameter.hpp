/** 
 * SqliteDataBlobParameter.hpp
 *
 *
 * @date: 19-07-2012
 * @author: Teddy DIDÉ
 * @version: 2.00
 * @brief: Project generated by gensources
 */

#ifndef _SQLITE_DATA_BLOBPARAMETER_HPP_
#define _SQLITE_DATA_BLOBPARAMETER_HPP_

#include "databaseparameter.hpp"
#include <boost/container/vector.hpp>

NAMESPACE_BEGIN(data_access)

using namespace log4cpp;
using namespace enc;
namespace bc = boost::container;

template <class EncodingT>
class _DataBlobParameter
: public _DataBaseParameter<EncodingT>
{ 
private:
    bc::vector<unsigned char> m_value;
	Category* m_logger;
	
public:
    _DataBlobParameter(const bc::vector<unsigned char>& value);
	
	// Complete Statement
	virtual bool 
	complete(_DataStatement<EncodingT>& statement, int index) const;
};

typedef _DataBlobParameter<ucs>        UniDataBlobParameter;
typedef _DataBlobParameter<ansi>       DataBlobParameter;

NAMESPACE_END

#include "DataBlobParameter_impl.hpp"
#endif
