/*
 * PdbParserInterpreter.hpp
 *
 *
 * @date 02-08-2019
 * @author Teddy DIDE
 * @version 1.00
 * Pdb Interpreter generated by gensources.
 */

#ifndef _PDBPARSER_INTERPRETER_H_
#define _PDBPARSER_INTERPRETER_H_

#include "config.hpp"
#include "Macros.hpp"
#include "Base.hpp"
#include "Array.hpp"
#include "Bool.hpp"
// Debug Interface Access (DIA) specific
#include <dia2.h>
#include "IDiaDataSourcePtrInterpreter.hpp"

#define A(str) encode<EncodingT,ansi>(str)
#define C(str) encode<ansi,EncodingT>(str)

using namespace boost;

NAMESPACE_BEGIN(interp)

	// Classe permettant de parser des fichiers PDB. 
	template <class EncodingT>
	class PdbParserInterpreter
	: public Base<EncodingT>
	{
	private:

	public:
		PdbParserInterpreter();

		virtual typename EncodingT::string_t toString() const;

		virtual boost::shared_ptr< Base<EncodingT> > clone() const;

		virtual typename EncodingT::string_t getClassName() const;

		virtual boost::shared_ptr< Base<EncodingT> > invoke(const typename EncodingT::string_t& method, std::vector< boost::shared_ptr< Base<EncodingT> > >& params);

		// Initialise le parseur PDB.
		boost::shared_ptr< Base<EncodingT> > initialize() const;

		// Lib√®re les objets PDB.
		boost::shared_ptr< Base<EncodingT> > terminate() const;
private:
  static IDiaDataSource *m_diaDataSource;
  
public:
  // Retourne l'objet DiaDataSource
  boost::shared_ptr< Base<EncodingT> > getDataSource() const;

		FACTORY_BEGIN_REGISTER
			CLASS_KEY_REGISTER  ( PdbParserInterpreter, UCS("PdbParser") );
			METHOD_KEY_REGISTER ( PdbParserInterpreter, boost::shared_ptr< Base<EncodingT> >, initialize, const_t, UCS("PdbParser::Initialize") );
			METHOD_KEY_REGISTER ( PdbParserInterpreter, boost::shared_ptr< Base<EncodingT> >, terminate, const_t, UCS("PdbParser::Terminate") );
METHOD_KEY_REGISTER ( PdbParserInterpreter, boost::shared_ptr< Base<EncodingT> >, getDataSource, const_t, C("PdbParser::DataSource") );
		FACTORY_END_REGISTER

		FACTORY_BEGIN_UNREGISTER
			CLASS_KEY_UNREGISTER  ( UCS("PdbParser") );
			METHOD_KEY_UNREGISTER ( UCS("PdbParser::Initialize") );
			METHOD_KEY_UNREGISTER ( UCS("PdbParser::Terminate") );
METHOD_KEY_UNREGISTER ( C("PdbParser::DataSource") );
		FACTORY_END_UNREGISTER
	};

NAMESPACE_END

#undef A
#undef C
#include "PdbParserInterpreter_impl.hpp"

#endif