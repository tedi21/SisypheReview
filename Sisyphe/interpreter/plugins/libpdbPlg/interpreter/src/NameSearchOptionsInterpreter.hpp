/*
 * NameSearchOptionsInterpreter.hpp
 *
 *
 * @date 21-06-2016
 * @author Teddy DIDE
 * @version 1.00
 * Pdb Interpreter generated by gensources.
 */

#ifndef _NAMESEARCHOPTIONS_INTERPRETER_H_
#define _NAMESEARCHOPTIONS_INTERPRETER_H_

#include "config.hpp"
#include "macros.hpp"
#include "String.hpp"
#include "Array.hpp"


#define A(str) encode<EncodingT,ansi>(str)
#define C(str) encode<ansi,EncodingT>(str)

using namespace boost;

NAMESPACE_BEGIN(interp)

	// Sp√©cifie les options de recherche pour le symbole et les noms de fichiers.
	template <class EncodingT>
	class NameSearchOptionsInterpreter
	: public Base<EncodingT>
	{
	private:

		void tidyValue();

	public:
		NameSearchOptionsInterpreter();

		~NameSearchOptionsInterpreter();

		virtual typename EncodingT::string_t toString() const;

		virtual shared_ptr< Base<EncodingT> > clone() const;

		virtual typename EncodingT::string_t getClassName() const;

		virtual shared_ptr< Base<EncodingT> > invoke(const typename EncodingT::string_t& method, std::vector< shared_ptr< Base<EncodingT> > >& params);

		shared_ptr< Base<EncodingT> > getNsNone() const;

		shared_ptr< Base<EncodingT> > getNsfCaseSensitive() const;

		shared_ptr< Base<EncodingT> > getNsfCaseInsensitive() const;

		shared_ptr< Base<EncodingT> > getNsfFNameExt() const;

		shared_ptr< Base<EncodingT> > getNsfRegularExpression() const;

		shared_ptr< Base<EncodingT> > getNsfUndecoratedName() const;

		FACTORY_BEGIN_REGISTER
			CLASS_KEY_REGISTER  ( NameSearchOptionsInterpreter, C("NameSearchOptions") );
			METHOD_KEY_REGISTER ( NameSearchOptionsInterpreter, shared_ptr< Base<EncodingT> >, getNsNone, const_t, C("NameSearchOptions::NsNone") );
			METHOD_KEY_REGISTER ( NameSearchOptionsInterpreter, shared_ptr< Base<EncodingT> >, getNsfCaseSensitive, const_t, C("NameSearchOptions::NsfCaseSensitive") );
			METHOD_KEY_REGISTER ( NameSearchOptionsInterpreter, shared_ptr< Base<EncodingT> >, getNsfCaseInsensitive, const_t, C("NameSearchOptions::NsfCaseInsensitive") );
			METHOD_KEY_REGISTER ( NameSearchOptionsInterpreter, shared_ptr< Base<EncodingT> >, getNsfFNameExt, const_t, C("NameSearchOptions::NsfFNameExt") );
			METHOD_KEY_REGISTER ( NameSearchOptionsInterpreter, shared_ptr< Base<EncodingT> >, getNsfRegularExpression, const_t, C("NameSearchOptions::NsfRegularExpression") );
			METHOD_KEY_REGISTER ( NameSearchOptionsInterpreter, shared_ptr< Base<EncodingT> >, getNsfUndecoratedName, const_t, C("NameSearchOptions::NsfUndecoratedName") );
		FACTORY_END_REGISTER

		FACTORY_BEGIN_UNREGISTER
			CLASS_KEY_UNREGISTER  ( C("NameSearchOptions") );
			METHOD_KEY_UNREGISTER ( C("NameSearchOptions::NsNone") );
			METHOD_KEY_UNREGISTER ( C("NameSearchOptions::NsfCaseSensitive") );
			METHOD_KEY_UNREGISTER ( C("NameSearchOptions::NsfCaseInsensitive") );
			METHOD_KEY_UNREGISTER ( C("NameSearchOptions::NsfFNameExt") );
			METHOD_KEY_UNREGISTER ( C("NameSearchOptions::NsfRegularExpression") );
			METHOD_KEY_UNREGISTER ( C("NameSearchOptions::NsfUndecoratedName") );
		FACTORY_END_UNREGISTER
	};

NAMESPACE_END

#undef A
#undef C
#include "NameSearchOptionsInterpreter_impl.hpp"

#endif