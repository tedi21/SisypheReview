<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!DOCTYPE document_schema SYSTEM "document_schema.dtd">

<document_schema>
<Workspace Author="Teddy DIDE" 
           Brief="Word Interpreter generated by gensources."
           Name="word_interpreter"
           Option="0"
           Type="Project"
           Version="1.00">


  <File Name="WordXMLDocument">
    <!-- Wrapper WordXMLDocument -->
    <Entity Class="Function" FunctionName="getDocumentNode" Name="WordXMLDocument:getDocumentNode@WordXMLNode" Alias="DocumentNode"/>  
    
    <Content Type="Declaration-body">
        WordXMLDocument* m_object;  
        bool m_allocated;
    </Content>
    
    <Content Type="Initialization-body">
    m_object = new WordXMLDocument();
    m_allocated = true;
    </Content>
    
    <Content Type="Destruction-body">
    if (m_allocated)
    {
        delete m_object;
        m_allocated = false;
    }
    </Content>
    
    <Content Type="Copy-body">
    m_object = const_cast&lt;WordXMLDocument*&gt;(&amp;object);
    m_allocated = false;
    </Content>
    
    <Content Type="Value-body">
    assert(m_object);
    return *m_object;
    </Content>
  
    <!-- Documentation WordXMLDocument -->
    <!-- Documentation getDocumentNode -->
    <Content Type="ReturnDescription" Target="WordXMLDocument:getDocumentNode@WordXMLNode" TargetREF="getDocumentNode">
    Le noeud racine du document XML.
    </Content>

    <Content Type="Example" Target="WordXMLDocument:getDocumentNode@WordXMLNode">
xml = new WordXML();
xml.Initialize();
xmlDocument = new WordXMLDocument();
xmlDocument.Parse("modelWord.xml");
rootNode = xmlDocument.DocumentNode;
nodes = rootNode.Evaluate("//o:Author");
inode = 0;
while inode &lt; nodes.Length do
    node = nodes.Item(inode);
    print(node.Content);
    inode.Increment();
endwhile
nodes = null;
xmlDocument = null;
xml.Terminate();
xml = null;
    </Content>
    
    <!-- Documentation createNode -->
    <Content Type="ParameterDescription" Target="WordXMLDocument:createNode@String@WordXMLNode" TargetREF="tagName">
    Le nom du noeud.
    </Content>
    
    <Content Type="ReturnDescription" Target="WordXMLDocument:createNode@String@WordXMLNode" TargetREF="createNode">
    Le noeud créé.
    </Content>
    
    <Content Type="Example" Target="WordXMLDocument:createNode@String@WordXMLNode">
xml = new WordXML();
xml.Initialize();
xmlDocument = new WordXMLDocument();
xmlDocument.Parse("modelWord.xml");
rootNode = xmlDocument.DocumentNode;
contentNode = rootNode.Nodes(rootNode.BodyTag).Item(0);
/* Note : Pour insérer ou ajouter du texte, 
   utiliser les fonctions InsertString ou AppendString 
   de WordXMLNode qui gèrent plus efficacement 
   l'insertion des noeuds Paragraph, Run et Text. */
/* Insertion d'un nouveau paragraphe */
paragraphNode = xmlDocument.CreateNode(rootNode.ParagraphTag);
contentNode.Append(paragraphNode);
/* Insertion d'un nouveau run */
runNode = xmlDocument.CreateNode(rootNode.RunTag);
paragraphNode.Append(runNode);
/* Insertion d'un texte */
node = xmlDocument.CreateTextNode("Hello world !!!");
runNode.Append(node);
xmlDocument.Save();
xmlDocument = null;
xml.Terminate();
xml = null;
    </Content>
    
    <!-- Documentation createTextNode -->
    <Content Type="ParameterDescription" Target="WordXMLDocument:createTextNode@String@WordXMLNode" TargetREF="txt">
    Le nom du noeud *Text*.
    </Content>
    
    <Content Type="ReturnDescription" Target="WordXMLDocument:createTextNode@String@WordXMLNode" TargetREF="createTextNode">
    Le noeud *Text* créé.
    </Content>
    
    <Content Type="Example" Target="WordXMLDocument:createTextNode@String@WordXMLNode">
	Voir l'exemple CreateNode.
    </Content>
    
    <!-- Documentation parse -->
    <Content Type="ParameterDescription" Target="WordXMLDocument:parse@String@void" TargetREF="doc">
    Le nom du document Word.
    </Content>
    
    <Content Type="Example" Target="WordXMLDocument:parse@String@void">
    Voir l'exemple DocumentNode.
    </Content>
    
    <!-- Documentation save -->
    <Content Type="Example" Target="WordXMLDocument:save@void">
	Voir l'exemple CreateNode.
    </Content>
  </File>

  <File Name="WordXMLNode">
    <!-- Wrapper Interpreter -->
    <Entity Class="Function" FunctionName="getTagName" Name="WordXMLNode:getTagName@String" Alias="TagName"/>
    <Entity Class="Function" FunctionName="getNodes" Name="WordXMLNode:getNodes@WordXMLNodeList" Alias="Nodes"/>
    <Entity Class="Function" FunctionName="getNodes" Name="WordXMLNode:getNodes@String@WordXMLNodeList" Alias="Nodes"/>
    <Entity Class="Function" FunctionName="getNextNode" Name="WordXMLNode:getNextNode@WordXMLNode" Alias="NextNode"/>
    <Entity Class="Function" FunctionName="getNextNode" Name="WordXMLNode:getNextNode@String@WordXMLNode" Alias="NextNode"/>
    <Entity Class="Function" FunctionName="getPreviousNode" Name="WordXMLNode:getPreviousNode@WordXMLNode" Alias="PreviousNode"/>
    <Entity Class="Function" FunctionName="getPreviousNode" Name="WordXMLNode:getPreviousNode@String@WordXMLNode" Alias="PreviousNode"/>
    <Entity Class="Function" FunctionName="getParent" Name="WordXMLNode:getParent@WordXMLNode" Alias="Parent"/>
    <Entity Class="Function" FunctionName="getParent" Name="WordXMLNode:getParent@String@WordXMLNode" Alias="Parent"/>
    <Entity Class="Function" FunctionName="getContent" Name="WordXMLNode:getContent@String" Alias="Content"/>
    <Entity Class="Function" FunctionName="getAttribute" Name="WordXMLNode:getAttribute@String@String" Alias="Attributes"/>
    <Entity Class="Function" FunctionName="getAttributesNames" Name="WordXMLNode:getAttributesNames@StringList" Alias="AttributesNames"/>
    <Entity Class="Function" FunctionName="getDocument" Name="WordXMLNode:getDocument@WordXMLDocumentPtr" Alias="Document"/>
    <Entity Class="Function" FunctionName="isValid" Name="WordXMLNode:isValid@Boolean" Alias="Validity"/>
    <Entity Class="Function" FunctionName="setContent" Name="WordXMLNode:setContent@String@void" Alias="Content"/>
    <Entity Class="Function" FunctionName="setAttribute" Name="WordXMLNode:setAttribute@String@String@void" Alias="Attributes"/>
    <Entity Class="Function" FunctionName="eraseAttribute" Name="WordXMLNode:eraseAttribute@String@void" Alias="removeAttributes"/>
    <Entity Class="Function" FunctionName="createPropertiesNode" Name="WordXMLNode:createPropertiesNode@WordXMLNode" Alias="PropertiesNode"/>
    <Entity Class="Function" FunctionName="setPropertiesNode" Name="WordXMLNode:setPropertiesNode@WordXMLNode@void" Alias="PropertiesNode"/>
    <Entity Class="Function" FunctionName="erasePropertiesNode" Name="WordXMLNode:erasePropertiesNode@void" Alias="removePropertiesNode"/>

    <Entity Class="Data" Name="WordXMLNode">
        <Attribute Name="DOCUMENT_TAG" Alias="DocumentTag"/>
        <Attribute Name="BODY_TAG" Alias="BodyTag"/>
        <Attribute Name="SECTION_TAG" Alias="SectionTag"/>
        <Attribute Name="SUBSECTION_TAG" Alias="SubSectionTag"/>
        <Attribute Name="TABLE_TAG" Alias="TableTag"/>
        <Attribute Name="ROW_TAG" Alias="RowTag"/>
        <Attribute Name="CELL_TAG" Alias="CellTag"/>
        <Attribute Name="PARAGRAPH_TAG" Alias="ParagraphTag"/>
        <Attribute Name="REVISION_TAG" Alias="RevisionTag"/>
        <Attribute Name="RUN_TAG" Alias="RunTag"/>
        <Attribute Name="NO_LENGTH" Alias="NoLength"/>
    </Entity>
    <Entity Class="Data" Name="WordXMLDocumentPtr" Alias="WordXMLDocument"/>
    <Entity Class="Data" Name="StringList"/>

    <Content Type="Implementation-body" Target="WordXMLNode:getDocument@WordXMLDocumentPtr">
    boost::shared_ptr&lt; Base&lt;EncodingT&gt; &gt; res(new WordXMLDocumentInterpreter&lt;EncodingT&gt;());
    res.reset(new WordXMLDocumentInterpreter&lt;EncodingT&gt;(*m_object.getDocument()));
    return res;
    </Content>
    
    <!-- Documentation DOCUMENT_TAG -->
    <Content Type="Example" Target="WordXMLNode" TargetREF="DOCUMENT_TAG">
xmlDocument = new WordXMLDocument();
xmlDocument.Parse("modelWord.xml");
rootNode = xmlDocument.DocumentNode;
print(rootNode.DocumentTag == rootNode.TagName);
    </Content>
  
    <!-- Documentation BODY_TAG -->
    <Content Type="Example" Target="WordXMLNode" TargetREF="BODY_TAG">
xmlDocument = new WordXMLDocument();
xmlDocument.Parse("modelWord.xml");
rootNode = xmlDocument.DocumentNode;
bodyNode = rootNode.Nodes(rootNode.BodyTag).Item(0);
print(bodyNode.TagName);
    </Content>
    
    <!-- Documentation SECTION_TAG -->
    <Content Type="Example" Target="WordXMLNode" TargetREF="SECTION_TAG">
xmlDocument = new WordXMLDocument();
xmlDocument.Parse("modelWord.xml");
rootNode = xmlDocument.DocumentNode;
nodes = rootNode.Evaluate("//" &amp; (rootNode.SectionTag));
if nodes.Length &gt; 0 then
    print(nodes.Item(0).TagName);
endif
    </Content>
    
    <!-- Documentation SUBSECTION_TAG -->
    <Content Type="Example" Target="WordXMLNode" TargetREF="SUBSECTION_TAG">
xmlDocument = new WordXMLDocument();
xmlDocument.Parse("modelWord.xml");
rootNode = xmlDocument.DocumentNode;
nodes = rootNode.Evaluate("//" &amp; (rootNode.SubSectionTag));
if nodes.Length &gt; 0 then
    print(nodes.Item(0).TagName);
endif
    </Content>
    
    <!-- Documentation TABLE_TAG -->
    <Content Type="Example" Target="WordXMLNode" TargetREF="TABLE_TAG">
xmlDocument = new WordXMLDocument();
xmlDocument.Parse("modelWord.xml");
rootNode = xmlDocument.DocumentNode;
nodes = rootNode.Evaluate("//" &amp; (rootNode.TableTag));
if nodes.Length &gt; 0 then
    print(nodes.Item(0).TagName);
endif
    </Content>
    
    <!-- Documentation ROW_TAG -->
    <Content Type="Example" Target="WordXMLNode" TargetREF="ROW_TAG">
xmlDocument = new WordXMLDocument();
xmlDocument.Parse("modelWord.xml");
rootNode = xmlDocument.DocumentNode;
nodes = rootNode.Evaluate("//" &amp; (rootNode.RowTag));
if nodes.Length &gt; 0 then
    print(nodes.Item(0).TagName);
endif
    </Content>
    
    <!-- Documentation CELL_TAG -->
    <Content Type="Example" Target="WordXMLNode" TargetREF="CELL_TAG">
xmlDocument = new WordXMLDocument();
xmlDocument.Parse("modelWord.xml");
rootNode = xmlDocument.DocumentNode;
nodes = rootNode.Evaluate("//" &amp; (rootNode.CellTag));
if nodes.Length &gt; 0 then
    print(nodes.Item(0).TagName);
endif
    </Content>
    
    <!-- Documentation PARAGRAPH_TAG -->
    <Content Type="Example" Target="WordXMLNode" TargetREF="PARAGRAPH_TAG">
xmlDocument = new WordXMLDocument();
xmlDocument.Parse("modelWord.xml");
rootNode = xmlDocument.DocumentNode;
nodes = rootNode.Evaluate("//" &amp; (rootNode.ParagraphTag));
if nodes.Length &gt; 0 then
    print(nodes.Item(0).TagName);
endif
    </Content>

    <!-- Documentation REVISION_TAG -->
    <Content Type="Example" Target="WordXMLNode" TargetREF="REVISION_TAG">
xmlDocument = new WordXMLDocument();
xmlDocument.Parse("modelWord.xml");
rootNode = xmlDocument.DocumentNode;
nodes = rootNode.Evaluate("//" &amp; (rootNode.RevisionTag));
if nodes.Length &gt; 0 then
    print(nodes.Item(0).TagName);
endif
    </Content>
    
    <!-- Documentation RUN_TAG -->
    <Content Type="Example" Target="WordXMLNode" TargetREF="RUN_TAG">
xmlDocument = new WordXMLDocument();
xmlDocument.Parse("modelWord.xml");
rootNode = xmlDocument.DocumentNode;
nodes = rootNode.Evaluate("//" &amp; (rootNode.RunTag));
if nodes.Length &gt; 0 then
    print(nodes.Item(0).TagName);
endif
    </Content>
  
    <!-- Documentation NO_LENGTH -->
    <Content Type="Example" Target="WordXMLNode" TargetREF="NO_LENGTH">
xmlDocument = new WordXMLDocument();
xmlDocument.Parse("modelWord.xml");
rootNode = xmlDocument.DocumentNode;
nodes = rootNode.Evaluate("//" &amp; (rootNode.CellTag));
inode = 0;
while inode &lt; nodes.Length do
    node = nodes.Item(inode);
    /* Supprime tous les textes contenus dans les cellules des tableaux. */
    node.EraseString(false, 0, rootNode.NoLength);
    /* Une cellule doit contenir au minimum un paragraphe. */
    node.AppendString(false, "");
    inode = inode + 1;
endwhile
    </Content>
  
    <!-- Documentation appendString -->
    <Content Type="ParameterDescription" Target="WordXMLNode:appendString@Boolean@String@WordXMLNodeList" TargetREF="trackedChanges">
    True, active le suivi de modification. False, le texte ajouté n'est pas en suivi de modification.
    </Content>
    
    <Content Type="ParameterDescription" Target="WordXMLNode:appendString@Boolean@String@WordXMLNodeList" TargetREF="str">
    Le texte à ajouter.
    </Content>
    
    <Content Type="ReturnDescription" Target="WordXMLNode:appendString@Boolean@String@WordXMLNodeList" TargetREF="appendString">
    La liste des noeuds *run &lt;w:r&gt;* créés lors de l'ajout du texte.
    </Content>
    
    <Content Type="Example" Target="WordXMLNode:appendString@Boolean@String@WordXMLNodeList">
xml = new WordXML();
xml.Initialize();
xmlDocument = new WordXMLDocument();
xmlDocument.Parse("modelWord.xml");
rootNode = xmlDocument.DocumentNode;
/* Mise à jour de l'auteur. */
/* Recherche des noeuds o:Author et o:Revision. */
xpathNodeList = rootNode.Evaluate("//o:Author | //o:Revision");
inode = 0;
while inode &lt; xpathNodeList.Length do
    /* Récupération du noeud dans la liste. */
    xpathNode = xpathNodeList.Item(inode);
    /* Suppression du contenu précèdent : suppression du noeud fils. */
    xpathNode.Nodes.Item(0).Erase();
    if xpathNode.TagName == "o:Author" then
        /* Ajout d'un nouveau contenu pour l'auteur. */
        xpathNode.Content = "WordXML";
    else
        /* Ajout d'un nouveau contenu pour la révision. */
        xpathNode.Content = "1";
    endif
    inode.Increment();
endwhile
xpathNodeList = null;
/* Ajout d'un texte dans le document */
bodyNode = rootNode.Nodes(rootNode.BodyTag).Item(0);
nodeList = bodyNode.AppendString(false, 
"Title" &amp; CrLf &amp; 
"All that we see or seem is but a dream within a dream." &amp; CrLf &amp; 
"Edgar Allan Poe");
/* Ajout du Style */
/* en gras pour le titre */
nodeTitleProperties = nodeList.Item(0).PropertiesNode;
boldNode = xmlDocument.CreateNode("w:b");
nodeTitleProperties.Append(boldNode);
/* en italique pour l'auteur */
nodeAuthorProperties = nodeList.Item(2).PropertiesNode;
italicNode = xmlDocument.CreateNode("w:i");
nodeAuthorProperties.Append(italicNode );
/* Paragraphe de l'auteur avec un alignement centré */
nodeParagraphProperties = nodeList.Item(2)
                        .Parent(rootNode.ParagraphTag).PropertiesNode;
alignNode = xmlDocument.CreateNode("w:jc");
alignNode.Attributes("w:val") = "center";
nodeParagraphProperties.Append(alignNode);
/* Suppression du mot Title */
bodyNode.EraseString(true, 0, 5);
/* Insertion du mot Quote */
bodyNode.InsertString(true, 0, "Quote");
xmlDocument.Save();
xmlDocument = null;
xml.Terminate();
xml = null;
    </Content>
  
    <!-- Documentation getTagName -->
    <Content Type="ReturnDescription" Target="WordXMLNode:getTagName@String" TargetREF="getTagName">
    Le tag du noeud courant.
    </Content>
    
    <Content Type="Example" Target="WordXMLNode:getTagName@String">
    Voir l'exemple AppendString.
    </Content>
    
    <!-- Documentation getNodes -->
    <Content Type="ReturnDescription" Target="WordXMLNode:getNodes@WordXMLNodeList" TargetREF="getNodes">
   La liste des noeuds fils du noeud courant.
    </Content>
    
    <Content Type="Example" Target="WordXMLNode:getNodes@WordXMLNodeList">
    Voir l'exemple AppendString.
    </Content>
    
    <!-- Documentation getNodes -->
    <Content Type="ParameterDescription" Target="WordXMLNode:getNodes@String@WordXMLNodeList" TargetREF="tagName">
    Le tag des noeuds fils à considérer.
    </Content>
    
    <Content Type="ReturnDescription" Target="WordXMLNode:getNodes@String@WordXMLNodeList" TargetREF="getNodes">
    La liste des noeuds fils avec le tag *tagName* du noeud courant.
    </Content>
    
    <Content Type="Example" Target="WordXMLNode:getNodes@String@WordXMLNodeList">
    Voir l'exemple AppendString.
    </Content>

    <!-- Documentation getNextNode -->
    <Content Type="ReturnDescription" Target="WordXMLNode:getNextNode@WordXMLNode" TargetREF="getNextNode">
    Le noeud suivant ou un noeud invalide si le noeud suivant n'existe pas.
    </Content>
    
    <Content Type="Example" Target="WordXMLNode:getNextNode@WordXMLNode">
xmlDocument = new WordXMLDocument();
xmlDocument.Parse("modelWord.xml");
rootNode = xmlDocument.DocumentNode;
node = rootNode.Nodes(rootNode.ParagraphTag).Item(0);
/* Liste les noeuds du même niveau suivant le noeud node */
while node.Validity do
    print(node.TagName);
    node = node.NextNode;
endwhile
    </Content>
    
    <!-- Documentation getNextNode -->
    <Content Type="ParameterDescription" Target="WordXMLNode:getNextNode@String@WordXMLNode" TargetREF="tagName">
    Le tag des noeuds suivant à considérer.
    </Content>
    
    <Content Type="ReturnDescription" Target="WordXMLNode:getNextNode@String@WordXMLNode" TargetREF="getNextNode">
    Le noeud *tagName* suivant ou un noeud invalide si le noeud *tagName* suivant n'existe pas.
    </Content>
    
    <Content Type="Example" Target="WordXMLNode:getNextNode@String@WordXMLNode">
xmlDocument = new WordXMLDocument();
xmlDocument.Parse("modelWord.xml");
rootNode = xmlDocument.DocumentNode;
node = rootNode.Nodes(rootNode.ParagraphTag).Item(0);
/* Liste les noeuds Paragraph du même niveau suivant le noeud node */
while node.Validity do
    print(node.TagName);
    node = node.NextNode(rootNode.ParagraphTag);
endwhile
    </Content>
    
    <!-- Documentation getPreviousNode -->
    <Content Type="ReturnDescription" Target="WordXMLNode:getPreviousNode@WordXMLNode" TargetREF="getPreviousNode">
    Le noeud précédant ou un noeud invalide si le noeud précédant n'existe pas.
    </Content>
    
    <Content Type="Example" Target="WordXMLNode:getPreviousNode@WordXMLNode">
xmlDocument = new WordXMLDocument();
xmlDocument.Parse("modelWord.xml");
rootNode = xmlDocument.DocumentNode;
nodeList = rootNode.Nodes(rootNode.ParagraphTag);
node = nodeList.Item(nodeList.Length - 1);
/* Liste les noeuds du même niveau précédant le noeud node. */
while node.Validity do
    print(node.TagName);
    node = node.PreviousNode;
endwhile
    </Content>
    
    <!-- Documentation getPreviousNode -->
    <Content Type="ParameterDescription" Target="WordXMLNode:getPreviousNode@String@WordXMLNode" TargetREF="tagName">
    Le tag des noeuds précèdant à considérer.
    </Content>
    
    <Content Type="ReturnDescription" Target="WordXMLNode:getPreviousNode@String@WordXMLNode" TargetREF="getPreviousNode">
    Le noeud *tagName* précédant ou un noeud invalide si le noeud *tagName* précédant n'existe pas.
    </Content>
    
    <Content Type="Example" Target="WordXMLNode:getPreviousNode@String@WordXMLNode">
xmlDocument = new WordXMLDocument();
xmlDocument.Parse("modelWord.xml");
rootNode = xmlDocument.DocumentNode;
nodeList = rootNode.Nodes(rootNode.ParagraphTag);
node = nodeList.Item(nodeList.Length - 1);
/* Liste les noeuds Paragraph du même niveau précédant le noeud node. */
while node.Validity do
    print(node.TagName);
    node = node.PreviousNode(rootNode.ParagraphTag);
endwhile
    </Content>
    
    <!-- Documentation getParent -->
    <Content Type="ReturnDescription" Target="WordXMLNode:getParent@WordXMLNode" TargetREF="getParent">
    Le noeud Parent du noeud courant ou un noeud invalide si le noeud Parent n'existe pas.
    </Content>

    <Content Type="Example" Target="WordXMLNode:getParent@WordXMLNode">
    Voir l'exemple AppendString.
    </Content>
    
    <!-- Documentation getParent -->
    <Content Type="ParameterDescription" Target="WordXMLNode:getPreviousNode@String@WordXMLNode" TargetREF="tagName">
    Le tag du noeud Parent à considérer.
    </Content>

    <Content Type="ReturnDescription" Target="WordXMLNode:getParent@String@WordXMLNode" TargetREF="getParent">
    Le noeud Parent avec le tag *tagName* du noeud courant ou un noeud invalide si le noeud Parent avec le tag *tagName* n'existe pas.
    </Content>
    
    <Content Type="Example" Target="WordXMLNode:getParent@String@WordXMLNode">
    Voir l'exemple AppendString.
    </Content>
    
    <!-- Documentation getContent -->
    <Content Type="ReturnDescription" Target="WordXMLNode:getContent@String" TargetREF="getContent">
    Le contenu d'un noeud XML.
    </Content>
    
    <Content Type="Example" Target="WordXMLNode:getContent@String">
    Voir l'exemple AppendString.
    </Content>
    
    <!-- Documentation getAttribute -->
    <Content Type="ParameterDescription" Target="WordXMLNode:getAttribute@String@String" TargetREF="attrName">
    Le tag de l'attribut à rechercher.
    </Content>

    <Content Type="ReturnDescription" Target="WordXMLNode:getAttribute@String@String" TargetREF="getAttribute">
    La valeur de l'attribut.
    </Content>

    <Content Type="Example" Target="WordXMLNode:getAttribute@String@String">
    Voir l'exemple AppendString.
    </Content>
    
    <!-- Documentation getAttributesNames -->
    <Content Type="ReturnDescription" Target="WordXMLNode:getAttributesNames@StringList" TargetREF="getAttributesNames">
    La liste des attributs du noeud courant.
    </Content>
    
    <Content Type="Example" Target="WordXMLNode:getAttributesNames@StringList">
xmlDocument = new WordXMLDocument();
xmlDocument.Parse("modelWord.xml");
rootNode = xmlDocument.DocumentNode;
nameList = rootNode.AttributesNames;
it = nameList.Begin;
while it != nameList.End do
    print(it.Current);
    it.Increment();
endwhile
    </Content>
    
    <!-- Documentation getDocument -->
    <Content Type="ReturnDescription" Target="WordXMLNode:getDocument@WordXMLDocumentPtr" TargetREF="getDocument">
    Une référence vers l'objet *Document* contenant le noeud.
    </Content>
    
    <Content Type="Example" Target="WordXMLNode:getDocument@WordXMLDocumentPtr">
xmlDocumentPtr = node.Document;
rootNode = xmlDocumentPtr.DocumentNode;
    </Content>
 
    <!-- Documentation isValid --> 
    <Content Type="ReturnDescription" Target="WordXMLNode:isValid@Boolean" TargetREF="isValid">
    Indique si le noeud est un noeud XML valide du document.
    </Content>
    
    <Content Type="Example" Target="WordXMLNode:isValid@Boolean">
print(node.Validity);
    </Content>
    
    <!-- Documentation setContent --> 
    <Content Type="ParameterDescription" Target="WordXMLNode:setContent@String@void" TargetREF="content">
    Le contenu du noeud.
    </Content>

    <Content Type="Example" Target="WordXMLNode:setContent@String@void">
    Voir l'exemple AppendString.
    </Content>
    
    <!-- Documentation setAttribute -->
    <Content Type="ParameterDescription" Target="WordXMLNode:setAttribute@String@String@void" TargetREF="attrName">
    Le nom de l'attribut.
    </Content>

    <Content Type="ParameterDescription" Target="WordXMLNode:setAttribute@String@String@void" TargetREF="attrValue">
    La valeur de l'attribut.
    </Content>
   
    <Content Type="Example" Target="WordXMLNode:setAttribute@String@String@void">
    Voir l'exemple AppendString.
    </Content>
    
    <!-- Documentation eraseAttribute -->
    <Content Type="ParameterDescription" Target="WordXMLNode:eraseAttribute@String@void" TargetREF="attrName">
    La nom de l'attribut.
    </Content>
    
    <Content Type="Example" Target="WordXMLNode:eraseAttribute@String@void">
node.Attributes("w:val") = null;
    </Content>
    
    <!-- Documentation createPropertiesNode -->
    <Content Type="ReturnDescription" Target="WordXMLNode:createPropertiesNode@WordXMLNode" TargetREF="createPropertiesNode">
    Le noeud propriétés pour le noeud courant.
    </Content>
    
    <Content Type="Example" Target="WordXMLNode:createPropertiesNode@WordXMLNode">
    Voir l'exemple AppendString.
    </Content>
    
    <!-- Documentation setPropertiesNode -->
    <Content Type="ParameterDescription" Target="WordXMLNode:setPropertiesNode@WordXMLNode@void" TargetREF="node">
    Le noeud propriétés pour le noeud courant.
    </Content>

    <Content Type="Example" Target="WordXMLNode:setPropertiesNode@WordXMLNode@void">
    Voir l'exemple AppendString.
    </Content>
    
    <!-- Documentation erasePropertiesNode -->
    <Content Type="Example" Target="WordXMLNode:erasePropertiesNode@void">
node.PropertiesNode = null;
    </Content>
    
    <!-- Documentation evaluate -->
    <Content Type="ParameterDescription" Target="WordXMLNode:evaluate@String@WordXMLNodeList" TargetREF="xpath">
    La requête XPath.
    </Content>
    
    <Content Type="ReturnDescription" Target="WordXMLNode:evaluate@String@WordXMLNodeList" TargetREF="evaluate">
    La liste des noeuds résultat de la requête XPath.
    </Content>
    
    <Content Type="Example" Target="WordXMLNode:evaluate@String@WordXMLNodeList">
    Voir l'exemple AppendString.
    </Content>
    
    <!-- Documentation hasAttribute -->
    <Content Type="ParameterDescription" Target="WordXMLNode:hasAttribute@String@Boolean" TargetREF="attrName">
    Le nom de l'attribut.
    </Content>
    
    <Content Type="ReturnDescription" Target="WordXMLNode:hasAttribute@String@Boolean" TargetREF="hasAttribute">
    True, si l'attribut existe, False sinon.
    </Content>
    
    <Content Type="Example" Target="WordXMLNode:hasAttribute@String@Boolean">
print(node.HasAttribute("w:val"));
    </Content>
 
    <!-- Documentation getString --> 
    <Content Type="ReturnDescription" Target="WordXMLNode:getString@String" TargetREF="getString">
    Le texte concaténé contenu dans les noeuds fils du noeud courant.
    </Content>

    <Content Type="Example" Target="WordXMLNode:getString@String">
xmlDocument = new WordXMLDocument();
xmlDocument.Parse("modelWord.xml");
rootNode = xmlDocument.DocumentNode;
print(rootNode.GetString());
    </Content>
    
    <!-- Documentation append --> 
    <Content Type="ParameterDescription" Target="WordXMLNode:append@WordXMLNode@void" TargetREF="newChild">
    Le nouveau noeud à ajouter.
    </Content>
    
    <Content Type="Example" Target="WordXMLNode:append@WordXMLNode@void">
    Voir l'exemple AppendString.
    </Content>
    
    <!-- Documentation erase --> 
    <Content Type="Example" Target="WordXMLNode:erase@void">
    Voir l'exemple AppendString.
    </Content>
    
    <!-- Documentation replace --> 
    <Content Type="ParameterDescription" Target="WordXMLNode:replace@WordXMLNode@WordXMLNode@void" TargetREF="newChild">
    Le nouveau noeud.
    </Content>
    
    <Content Type="ParameterDescription" Target="WordXMLNode:replace@WordXMLNode@WordXMLNode@void" TargetREF="oldChild">
    L'ancien noeud.
    </Content>
    
    <Content Type="Example" Target="WordXMLNode:replace@WordXMLNode@WordXMLNode@void">
node.Replace(newChild, oldChild);
    </Content>
    
    <!-- Documentation insertBefore --> 
    <Content Type="ParameterDescription" Target="WordXMLNode:insertBefore@WordXMLNode@WordXMLNode@void" TargetREF="newChild">
    Le nouveau noeud à insérer.
    </Content>
    
    <Content Type="ParameterDescription" Target="WordXMLNode:insertBefore@WordXMLNode@WordXMLNode@void" TargetREF="refChild">
    Le noeud suivant le noeud à insérer. Détermine la position du noeud à insérer dans la liste.
    </Content>

    <Content Type="Example" Target="WordXMLNode:insertBefore@WordXMLNode@WordXMLNode@void">
node.InsertBefore(newChild, refChild);
    </Content>
    
    <!-- Documentation cloneNode --> 
    <Content Type="ParameterDescription" Target="WordXMLNode:cloneNode@Boolean@WordXMLNode" TargetREF="deep">
    Indique si la copie se fait en profondeur ou non. Si la copie se fait en profondeur, les noeuds fils sont aussi copiés. Dans le cas contraire, seulement le noeud est copié. 
    </Content>
    
    <Content Type="ReturnDescription" Target="WordXMLNode:cloneNode@Boolean@WordXMLNode" TargetREF="cloneNode">
    Le noeud copié.
    </Content>

    <Content Type="Example" Target="WordXMLNode:cloneNode@Boolean@WordXMLNode">
node.CloneNode(true);
    </Content>
 
    <!-- Documentation eraseString --> 
    <Content Type="ParameterDescription" Target="WordXMLNode:eraseString@Boolean@Uint32@Uint32@void" TargetREF="trackedChanges">
    True, active le suivi de modification. False, le texte supprimé n'est pas en suivi de modification.
    </Content>
    
    <Content Type="ParameterDescription" Target="WordXMLNode:eraseString@Boolean@Uint32@Uint32@void" TargetREF="pos">
    La position de départ du texte à supprimer.
    </Content>
    
    <Content Type="ParameterDescription" Target="WordXMLNode:eraseString@Boolean@Uint32@Uint32@void" TargetREF="length">
    La longueur du texte à supprimer.
    </Content>
 
    <Content Type="Example" Target="WordXMLNode:eraseString@Boolean@Uint32@Uint32@void">
    Voir l'exemple AppendString.
    </Content>
    
    <!-- Documentation insertString --> 
    <Content Type="ParameterDescription" Target="WordXMLNode:insertString@Boolean@Uint32@String@WordXMLNodeList" TargetREF="trackedChanges">
    True, active le suivi de modification. False, le texte inséré n'est pas en suivi de modification.
    </Content>
    
    <Content Type="ParameterDescription" Target="WordXMLNode:insertString@Boolean@Uint32@String@WordXMLNodeList" TargetREF="pos">
    La position de départ du texte à insérer.
    </Content>
    
    <Content Type="ParameterDescription" Target="WordXMLNode:insertString@Boolean@Uint32@String@WordXMLNodeList" TargetREF="str">
    Le texte à insérer.
    </Content>
    
    <Content Type="ReturnDescription" Target="WordXMLNode:insertString@Boolean@Uint32@String@WordXMLNodeList" TargetREF="insertString">
    La liste des noeuds *run &lt;w:r&gt;* créés lors de l'insertion du texte.
    </Content>
    
    <Content Type="Example" Target="WordXMLNode:insertString@Boolean@Uint32@String@WordXMLNodeList">
    Voir l'exemple AppendString.
    </Content>
  </File>

  <File Name="WordXMLNodeList"> 
    <!-- Documentation WordXMLNodeList --> 
    <!-- Documentation item -->
    <Content Type="ParameterDescription" Target="WordXMLNodeList:item@Uint32@WordXMLNode" TargetREF="i">
    L'indice du noeud dans la liste.
    </Content>
    
    <Content Type="ReturnDescription" Target="WordXMLNodeList:item@Uint32@WordXMLNode" TargetREF="item">
    Le noeud dans la liste à la position *i*.
    </Content>

    <Content Type="Example" Target="WordXMLNodeList:item@Uint32@WordXMLNode">
xpathNodeList = rootNode.Evaluate("//o:Author");
inode = 0;
if inode &lt; xpathNodeList.Length then
    /* Récupération du noeud dans la liste. */
    xpathNode = xpathNodeList.Item(inode);
endif
    </Content>
    
    <!-- Documentation item -->   
    <Content Type="ReturnDescription" Target="WordXMLNodeList:length@Uint32" TargetREF="length">
    La taille de la liste.
    </Content>

    <Content Type="Example" Target="WordXMLNodeList:length@Uint32">
    Voir l'exemple Item.
    </Content>
  </File>
  
  <File Name="WordMacro"> 
    <!-- Documentation WordMacro --> 
    <!-- Documentation convertToXML -->
    <Content Type="ParameterDescription" Target="WordMacro:convertToXML@String@String@Boolean@Boolean" TargetREF="file">
    Le nom du document Word.
    </Content>
    
    <Content Type="ParameterDescription" Target="WordMacro:convertToXML@String@String@Boolean@Boolean" TargetREF="xmlFile">
    Le nom du document Word XML.
    </Content>
    
    <Content Type="ParameterDescription" Target="WordMacro:convertToXML@String@String@Boolean@Boolean" TargetREF="acceptAllRevisions">
    True, le suivi de modification est accepté. False, le document d'origine est convertie tel quel.
    </Content>
    
    <Content Type="ReturnDescription" Target="WordMacro:convertToXML@String@String@Boolean@Boolean" TargetREF="convertToXML">
    True, le document est convertie. False, le document n'est pas convertie.
    </Content>

    <Content Type="Example" Target="WordMacro:convertToXML@String@String@Boolean@Boolean">
word = new WordMacro();
docDir = new Folder(docPath);
tempDir = new Folder(tempPath);
word.ConvertToXML(docDir.AbsolutePath, tempDir.AbsolutePath &amp; "\xmldoc.xml", false);
    </Content>
  
    <!-- Documentation convertToDOC -->
    <Content Type="ParameterDescription" Target="WordMacro:convertToDOC@String@String@Boolean@Boolean" TargetREF="file">
    Le nom du document Word XML.
    </Content>
    
    <Content Type="ParameterDescription" Target="WordMacro:convertToDOC@String@String@Boolean@Boolean" TargetREF="docFile">
    Le nom du document Word.
    </Content>
    
    <Content Type="ParameterDescription" Target="WordMacro:convertToDOC@String@String@Boolean@Boolean" TargetREF="acceptAllRevisions">
    True, le suivi de modification est accepté. False, le document d'origine est convertie tel quel.
    </Content>
    
    <Content Type="ReturnDescription" Target="WordMacro:convertToDOC@String@String@Boolean@Boolean" TargetREF="convertToDOC">
    True, le document est convertie. False, le document n'est pas convertie.
    </Content>

    <Content Type="Example" Target="WordMacro:convertToDOC@String@String@Boolean@Boolean">
word = new WordMacro();
fileDir = new Folder(filePath);
tempDir = new Folder(tempPath);
word.convertToDOC(fileDir.AbsolutePath, tempDir.AbsolutePath &amp; "\filedoc.doc", false);
    </Content>  
  
    <!-- Documentation convertToPDF -->
    <Content Type="ParameterDescription" Target="WordMacro:convertToPDF@String@String@Boolean@Boolean" TargetREF="file">
    Le nom du document Word.
    </Content>
    
    <Content Type="ParameterDescription" Target="WordMacro:convertToPDF@String@String@Boolean@Boolean" TargetREF="pdfFile">
    Le nom du document PDF.
    </Content>
    
    <Content Type="ParameterDescription" Target="WordMacro:convertToPDF@String@String@Boolean@Boolean" TargetREF="acceptAllRevisions">
    True, le suivi de modification est accepté. False, le document d'origine est convertie tel quel.
    </Content>
    
    <Content Type="ReturnDescription" Target="WordMacro:convertToPDF@String@String@Boolean@Boolean" TargetREF="convertToPDF">
    True, le document est convertie. False, le document n'est pas convertie.
    </Content>

    <Content Type="Example" Target="WordMacro:convertToPDF@String@String@Boolean@Boolean">
word = new WordMacro();
fileDir = new Folder(filePath);
tempDir = new Folder(tempPath);
word.convertToPDF(fileDir.AbsolutePath, tempDir.AbsolutePath &amp; "\filepdf.pdf", false);
    </Content>  
    
    <!-- Documentation convertToXDOC -->
    <Content Type="ParameterDescription" Target="WordMacro:convertToXDOC@String@String@Boolean@Boolean" TargetREF="file">
    Le nom du document Word.
    </Content>
    
    <Content Type="ParameterDescription" Target="WordMacro:convertToXDOC@String@String@Boolean@Boolean" TargetREF="xdocFile">
    Le nom du document XDOC.
    </Content>
    
    <Content Type="ParameterDescription" Target="WordMacro:convertToXDOC@String@String@Boolean@Boolean" TargetREF="acceptAllRevisions">
    True, le suivi de modification est accepté. False, le document d'origine est convertie tel quel.
    </Content>
    
    <Content Type="ReturnDescription" Target="WordMacro:convertToXDOC@String@String@Boolean@Boolean" TargetREF="convertToXDOC">
    True, le document est convertie. False, le document n'est pas convertie.
    </Content>

    <Content Type="Example" Target="WordMacro:convertToXDOC@String@String@Boolean@Boolean">
word = new WordMacro();
fileDir = new Folder(filePath);
tempDir = new Folder(tempPath);
word.convertToXDOC(fileDir.AbsolutePath, tempDir.AbsolutePath &amp; "\filedoc.xdoc", false);
    </Content>  
  </File>
  
</Workspace>
</document_schema>
